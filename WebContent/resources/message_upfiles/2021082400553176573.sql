--DB계정생성
--USERNAME : DOLIKE
--PASSWORD : DOLIKE

--CREATE USER DOLIKE IDENTIFIED BY DOLIKE;
--GRANT CONNECT, RESOURCE TO DOLIKE;




--리셋

DROP TABLE NOTICE;
DROP TABLE FOLLOW;
DROP TABLE CH_ATTACHMENT;
DROP TABLE CHALLENGE_USER;
DROP TABLE CHALLENGE_REPLY;
DROP TABLE CHALLENGE;
DROP TABLE CH_VOTE;
DROP TABLE CHALLENGE_APPLY;
DROP TABLE MSG_ATTACHMENT;
DROP TABLE MESSAGE;
DROP TABLE FAVBOARD;
DROP TABLE ADMIN_USER_TABLE; 
DROP TABLE BOARD_ATTACHMENT;
DROP TABLE CMT;
DROP TABLE BOARD;
DROP TABLE MEMBER;
DROP TABLE CATEGORY; 


DROP SEQUENCE SEQ_NONO; --공지사항 시퀀스
DROP SEQUENCE SEQ_FLNO; --팔로잉 테이블 시퀀스
DROP SEQUENCE SEQ_CHAT_NO;      -- 챌린지첨부파일번호 발생시킬 시퀀스
DROP SEQUENCE SEQ_CHRP_NO;      -- 챌린지댓글번호 발생시킬 시퀀스
DROP SEQUENCE SEQ_CH_NO;      -- 챌린지번호 발생시킬 시퀀스
DROP SEQUENCE SEQ_AP_NO;      -- 챌린지 신청번호 발생시킬 시퀀스
DROP SEQUENCE SEQ_MATNO;
DROP SEQUENCE SEQ_MNO;
DROP SEQUENCE SEQ_FNO;
DROP SEQUENCE SEQ_AUT; -- 관리자용 테이블 회원 번호 발생시킬 시퀀스
DROP SEQUENCE SEQ_CTG; -- 카테고리 번호 발생시킬 시퀀스
DROP SEQUENCE SEQ_COUNT_ATTA;
DROP SEQUENCE SEQ_COUNT_COMMENT;
DROP SEQUENCE SEQ_COUNT_BOARD;

--테이블 생성


--------------------------------------------------
--------------     CATEGORY 관련	------------------	
--------------------------------------------------

CREATE TABLE CATEGORY (
	CATEGORY_NO	NUMBER PRIMARY KEY,
	CATEGORY_NAME VARCHAR2(20) NOT NULL UNIQUE
);

CREATE SEQUENCE SEQ_CTG
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE
    NOCACHE;

COMMENT ON COLUMN CATEGORY.CATEGORY_NO IS '카테고리 번호';
COMMENT ON COLUMN CATEGORY.CATEGORY_NAME IS '카테고리 이름';

INSERT INTO CATEGORY 
VALUES (SEQ_CTG.NEXTVAL, '공부');

INSERT INTO CATEGORY 
VALUES (SEQ_CTG.NEXTVAL, '건강');

INSERT INTO CATEGORY 
VALUES (SEQ_CTG.NEXTVAL, '여행');

INSERT INTO CATEGORY 
VALUES (SEQ_CTG.NEXTVAL, '요리');

INSERT INTO CATEGORY 
VALUES (SEQ_CTG.NEXTVAL, '동물');

INSERT INTO CATEGORY 
VALUES (SEQ_CTG.NEXTVAL, '패션뷰티');

INSERT INTO CATEGORY 
VALUES (SEQ_CTG.NEXTVAL, '기타');

--------------------------------------------------
--------------     MEMBER 관련	-----------
--------------------------------------------------

CREATE TABLE MEMBER(
	USER_ID VARCHAR2(20) PRIMARY KEY,
	USER_NAME VARCHAR2(20) NOT NULL,
	PASSWORD VARCHAR2(30) NOT NULL,
	BIRTHDATE DATE NOT NULL,
	PHONE VARCHAR2(30) UNIQUE NOT NULL,
	EMAIL VARCHAR2(100) UNIQUE NOT NULL,
	NICKNAME VARCHAR2(50) UNIQUE NOT NULL,
	INTERESTS NUMBER,
	USER_CREATE_DATE DATE DEFAULT SYSDATE,
	USER_STATUS VARCHAR2(20) DEFAULT 'Y',
	FOREIGN KEY(INTERESTS) REFERENCES CATEGORY(CATEGORY_NO)
);

COMMENT ON COLUMN MEMBER.USER_ID IS '아이디';
COMMENT ON COLUMN MEMBER.USER_NAME IS '이름';
COMMENT ON COLUMN MEMBER.PASSWORD IS '비밀번호';
COMMENT ON COLUMN MEMBER.BIRTHDATE IS '생년월일';
COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.NICKNAME IS '닉네임';
COMMENT ON COLUMN MEMBER.INTERESTS IS '관심사';
COMMENT ON COLUMN MEMBER.USER_CREATE_DATE IS '가입일자';
COMMENT ON COLUMN MEMBER.USER_STATUS IS '회원상태';


INSERT INTO MEMBER 
VALUES ('admin', '관리자', '1234', '2021-07-14', '010-1234-5678', 'admin@dolike.com', '관리자', NULL, SYSDATE, DEFAULT);

--------------------------------------------------
--------------     BOARD 관련	-----------
--------------------------------------------------


CREATE TABLE BOARD(
	BOARD_NO NUMBER PRIMARY KEY,
	NICKNAME VARCHAR2(30) NOT NULL,
	TAG VARCHAR2(20),
	BOARD_TITLE VARCHAR2(50),
	BOARD_DATE DATE DEFAULT SYSDATE,
	BOARD_CONTENT VARCHAR2(2048),
	AVALIABLE NUMBER,
	VIEWS NUMBER DEFAULT 0,
	CATEGORY_NO NUMBER,
	FOREIGN KEY (NICKNAME) REFERENCES MEMBER(USER_ID),
	FOREIGN KEY (CATEGORY_NO) REFERENCES CATEGORY(CATEGORY_NO)
);

CREATE TABLE CMT(
	COMMENT_NO NUMBER PRIMARY KEY,
	NICKNAME VARCHAR2(30) NOT NULL,
	CMT_CONTENT VARCHAR2(1024),
	BOARD_NO NUMBER,
	FOREIGN KEY (NICKNAME) REFERENCES MEMBER(USER_ID),
	FOREIGN KEY (BOARD_NO) REFERENCES BOARD(BOARD_NO)
);

CREATE TABLE BOARD_ATTACHMENT(
	B_NO NUMBER PRIMARY KEY,
	B_NEWNAME VARCHAR2(255),
	B_ORIGIN VARCHAR2(255) NOT NULL,
	B_LOCATION VARCHAR2(1000) NOT NULL,
	BOARD_NO NUMBER,
	FOREIGN KEY (BOARD_NO) REFERENCES BOARD(BOARD_NO)
);


COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글번호';
COMMENT ON COLUMN BOARD.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '글제목';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '글내용';
COMMENT ON COLUMN BOARD.NICKNAME IS '작성자';
COMMENT ON COLUMN BOARD.VIEWS IS '조회수';
COMMENT ON COLUMN BOARD.BOARD_DATE IS '작성일';
COMMENT ON COLUMN BOARD.AVALIABLE IS '글상태';
COMMENT ON COLUMN BOARD.TAG IS '말머리';

COMMENT ON COLUMN CMT.COMMENT_NO IS '댓글번호';
COMMENT ON COLUMN CMT.NICKNAME IS '댓글작성자';
COMMENT ON COLUMN CMT.CMT_CONTENT IS '댓글내용';
COMMENT ON COLUMN CMT.BOARD_NO IS '글번호';

COMMENT ON COLUMN BOARD_ATTACHMENT.B_NO IS '첨부파일번호';
COMMENT ON COLUMN BOARD_ATTACHMENT.B_NEWNAME IS '첨부파일NEW';
COMMENT ON COLUMN BOARD_ATTACHMENT.B_ORIGIN IS '첨부파일ORIGIN';
COMMENT ON COLUMN BOARD_ATTACHMENT.B_LOCATION IS '첨부파일위치';
COMMENT ON COLUMN BOARD_ATTACHMENT.BOARD_NO IS '글번호';

CREATE SEQUENCE SEQ_COUNT_BOARD NOCACHE;
CREATE SEQUENCE SEQ_COUNT_COMMENT NOCACHE;
CREATE SEQUENCE SEQ_COUNT_ATTA NOCACHE;

--------------------------------------------------
--------------     ADMIN_USER_TABLE 관련	-----------
--------------------------------------------------

CREATE TABLE ADMIN_USER_TABLE (
	USER_NO NUMBER PRIMARY KEY,
	USER_ID VARCHAR2(20) NOT NULL,
	USER_ACCESS	VARCHAR2(20) NOT NULL,
	USER_STATUS	VARCHAR2(1)	DEFAULT 'Y' CHECK (USER_STATUS IN('Y', 'N')),
	ACCESS_RIGHTS VARCHAR2(20) NOT NULL,
	USER_PROBLEM VARCHAR2(300),
	REPORT_COUNT NUMBER,
	BOARD_NO NUMBER NOT NULL,
	BOARD_TITLE	VARCHAR2(50) NOT NULL,
	BOARD_CONTENT NUMBER,
	BOARD_DATE DATE	DEFAULT SYSDATE,
	FOREIGN KEY(USER_ID) REFERENCES MEMBER(USER_ID),
	FOREIGN KEY(BOARD_NO) REFERENCES BOARD(BOARD_NO)
);

CREATE SEQUENCE SEQ_AUT NOCACHE;
 
COMMENT ON COLUMN ADMIN_USER_TABLE.USER_NO IS '회원 번호';
COMMENT ON COLUMN ADMIN_USER_TABLE.USER_ID IS '아이디';
COMMENT ON COLUMN ADMIN_USER_TABLE.USER_ACCESS IS '접속 권한';
COMMENT ON COLUMN ADMIN_USER_TABLE.USER_STATUS IS '회원 상태';
COMMENT ON COLUMN ADMIN_USER_TABLE.ACCESS_RIGHTS IS '이용 권한';
COMMENT ON COLUMN ADMIN_USER_TABLE.USER_PROBLEM IS '재재 사유';
COMMENT ON COLUMN ADMIN_USER_TABLE.REPORT_COUNT IS '신고 횟수';
COMMENT ON COLUMN ADMIN_USER_TABLE.BOARD_NO IS '글 번호';
COMMENT ON COLUMN ADMIN_USER_TABLE.BOARD_TITLE IS '게시글 제목';
COMMENT ON COLUMN ADMIN_USER_TABLE.BOARD_CONTENT IS '댓글 갯수';
COMMENT ON COLUMN ADMIN_USER_TABLE.BOARD_DATE IS '게시글 생성일';





----------------------------------------------------
---------------     FAVBOARD 관련    -------------------	
----------------------------------------------------
CREATE TABLE FAVBOARD (
	USER_ID VARCHAR2(20) NOT NULL,
	CATEGORY_NO NUMBER NOT NULL,
	FB_TITLE VARCHAR2(50) NOT NULL,
	FB_STATUS CHAR DEFAULT 'Y' CHECK (FB_STATUS IN ('Y', 'N')),
    UNIQUE(FB_TITLE),
	FOREIGN KEY(CATEGORY_NO) REFERENCES CATEGORY(CATEGORY_NO)
);

COMMENT ON COLUMN FAVBOARD.USER_ID IS '회원아이디';
COMMENT ON COLUMN FAVBOARD.CATEGORY_NO IS '카테고리번호';
COMMENT ON COLUMN FAVBOARD.FB_TITLE IS '카테고리이름';
COMMENT ON COLUMN FAVBOARD.FB_STATUS IS '즐겨찾기상태';

CREATE SEQUENCE SEQ_FNO
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE
    NOCACHE;
----------------------------------------------------
---------------     MESSAGE 관련    -------------------	
----------------------------------------------------
CREATE TABLE MESSAGE (
	MSG_NO NUMBER PRIMARY KEY,
	RECV_ID VARCHAR2(20) NOT NULL,
	SENDER_ID	VARCHAR2(20) NOT NULL,
	MSG_TITLE	VARCHAR2(45) NOT NULL,
	MSG_CONTENT VARCHAR2(1500) NOT NULL,
	RECVTIME DATE DEFAULT SYSDATE NOT NULL,
	MSG_STATUS VARCHAR2(2) DEFAULT 'N' CHECK (MSG_STATUS IN ('Y', 'N')),
	MSG_DEL VARCHAR2(2) DEFAULT 'N' CHECK (MSG_DEL IN ('Y', 'N')),
    FOREIGN KEY(RECV_ID) REFERENCES MEMBER(USER_ID)
);

COMMENT ON COLUMN MESSAGE.MSG_NO IS '쪽지번호';
COMMENT ON COLUMN MESSAGE.RECV_ID IS '수신인';
COMMENT ON COLUMN MESSAGE.SENDER_ID IS '발송인';
COMMENT ON COLUMN MESSAGE.MSG_TITLE IS '쪽지제목';
COMMENT ON COLUMN MESSAGE.MSG_CONTENT IS '쪽지내용';
COMMENT ON COLUMN MESSAGE.RECVTIME IS '수신시각';
COMMENT ON COLUMN MESSAGE.MSG_STATUS IS '읽음상태';
COMMENT ON COLUMN MESSAGE.MSG_DEL IS '쪽지삭제여부';

CREATE SEQUENCE SEQ_MNO
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE
    NOCACHE;
----------------------------------------------------
---------------     MESSAGE_ATTACHMENT 관련    -------------------	
----------------------------------------------------
CREATE TABLE MSG_ATTACHMENT (
	MAT_NO NUMBER NOT NULL,
	MAT_NEWNAME	VARCHAR2(255) NOT NULL,
	MAT_ORIGIN	VARCHAR2(255) NOT NULL,
	MAT_LOCATION VARCHAR2(1000)	NOT NULL,
	REF_MNO NUMBER NOT NULL,
	FOREIGN KEY(REF_MNO) REFERENCES MESSAGE(MSG_NO)
);

COMMENT ON COLUMN MSG_ATTACHMENT.MAT_NO IS '첨부파일번호';
COMMENT ON COLUMN MSG_ATTACHMENT.MAT_NEWNAME IS '수정이름';
COMMENT ON COLUMN MSG_ATTACHMENT.MAT_ORIGIN IS '원본이름';
COMMENT ON COLUMN MSG_ATTACHMENT.MAT_LOCATION IS '첨부파일위치';
COMMENT ON COLUMN MSG_ATTACHMENT.REF_MNO IS '참조쪽지번호';

CREATE SEQUENCE SEQ_MATNO
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE
    NOCACHE;



--------------------------------------------------
--------------     CHALLENGE 관련     ------------------	
--------------------------------------------------


CREATE TABLE CHALLENGE_APPLY (
	AP_NO		NUMBER		PRIMARY KEY, 
	AP_BODY		VARCHAR2(1000)	NOT NULL,
	AP_DATE		DATE		NOT NULL,
	AP_USER		VARCHAR2(20)		NOT NULL,
	CATEGORY_NO	NUMBER		NOT NULL,
	FOREIGN KEY(AP_USER) REFERENCES MEMBER (USER_ID),
	FOREIGN KEY(CATEGORY_NO) REFERENCES CATEGORY (CATEGORY_NO)
);

COMMENT ON COLUMN CHALLENGE_APPLY.AP_NO IS '신청번호';
COMMENT ON COLUMN CHALLENGE_APPLY.AP_BODY IS '신청내용';
COMMENT ON COLUMN CHALLENGE_APPLY.AP_DATE IS '신청날짜';
COMMENT ON COLUMN CHALLENGE_APPLY.AP_USER IS '신청유저';
COMMENT ON COLUMN CHALLENGE_APPLY.CATEGORY_NO IS '카테고리번호';

CREATE TABLE CH_VOTE (
	CH_TITLE		VARCHAR2(70)	PRIMARY KEY,
	AP_NO		NUMBER		NOT NULL,
	VOTE_START	DATE		NOT NULL,
	VOTE_END	DATE		NOT NULL,
	VOTE_COUNT	NUMBER,
	CATEGORY_NO	NUMBER		NOT NULL,
	FOREIGN KEY(AP_NO) REFERENCES CHALLENGE_APPLY (AP_NO),
	FOREIGN KEY(CATEGORY_NO) REFERENCES CATEGORY (CATEGORY_NO)
);

COMMENT ON COLUMN CH_VOTE.CH_TITLE IS '챌린지이름';
COMMENT ON COLUMN CH_VOTE.AP_NO IS '신청번호';
COMMENT ON COLUMN CH_VOTE.VOTE_START IS '투표시작';
COMMENT ON COLUMN CH_VOTE.VOTE_END IS '투표마감';
COMMENT ON COLUMN CH_VOTE.VOTE_COUNT IS '투표수';
COMMENT ON COLUMN CH_VOTE.CATEGORY_NO IS '카테고리번호';

CREATE TABLE CHALLENGE ( 
   CH_NO       NUMBER    PRIMARY KEY,
   CH_TITLE      VARCHAR2(70)   NOT NULL,
   CH_VOTECOUNT   NUMBER,
   CH_START     DATE   NOT NULL,
   CH_END       DATE   NOT NULL,
   CH_STATUS   CHAR      DEFAULT 'Y',
   CH_BODY      VARCHAR2(4000)   NOT NULL,
   CH_USERCOUNT   NUMBER,
   CATEGORY_NO   NUMBER      NOT NULL,
   FOREIGN KEY(CH_TITLE) REFERENCES CH_VOTE(CH_TITLE),
   FOREIGN KEY(CATEGORY_NO) REFERENCES CATEGORY(CATEGORY_NO),
   CHECK (CH_STATUS IN ('Y', 'N'))
);

COMMENT ON COLUMN CHALLENGE.CH_NO IS '챌린지번호';
COMMENT ON COLUMN CHALLENGE.CH_TITLE IS '챌린지이름';
COMMENT ON COLUMN CHALLENGE.CH_VOTECOUNT IS '투표수';
COMMENT ON COLUMN CHALLENGE.CH_START IS '시작일';
COMMENT ON COLUMN CHALLENGE.CH_END IS '마감일';
COMMENT ON COLUMN CHALLENGE.CH_STATUS IS '진행상태(Y/N)';
COMMENT ON COLUMN CHALLENGE.CH_BODY IS '챌린지내용';
COMMENT ON COLUMN CHALLENGE.CH_USERCOUNT IS '참여인원';
COMMENT ON COLUMN CHALLENGE.CATEGORY_NO IS '카테고리번호';


CREATE TABLE CHALLENGE_REPLY ( 
	CH_RP_NO NUMBER	PRIMARY KEY,
	CH_NO NUMBER NOT NULL,
	RP_USER	VARCHAR2(20) NOT NULL,
	CREATE_DATE	DATE DEFAULT SYSDATE,
	RP_BODY	VARCHAR2(4000)	NOT NULL,
	PH_ORIGINNAME VARCHAR2(255)	NOT NULL,
	PH_NEWNAME	VARCHAR2(255)	NOT NULL,
	PH_LOCATION	VARCHAR2(1000)	NOT NULL,
	RP_LIKE	NUMBER,
	RP_STATUS CHAR DEFAULT 'Y',
	UNIQUE(PH_NEWNAME),
	FOREIGN KEY(CH_NO) REFERENCES CHALLENGE(CH_NO),
	FOREIGN KEY(RP_USER) REFERENCES MEMBER(USER_ID),
	CHECK (RP_STATUS IN ('Y', 'N'))	
);

COMMENT ON COLUMN CHALLENGE_REPLY.CH_RP_NO IS '댓글번호';
COMMENT ON COLUMN CHALLENGE_REPLY.CH_NO IS '챌린지번호';
COMMENT ON COLUMN CHALLENGE_REPLY.RP_USER IS '작성자';
COMMENT ON COLUMN CHALLENGE_REPLY.CREATE_DATE IS '작성날짜';
COMMENT ON COLUMN CHALLENGE_REPLY.RP_BODY IS '댓글내용';
COMMENT ON COLUMN CHALLENGE_REPLY.PH_ORIGINNAME IS '첨부파일원본이름';
COMMENT ON COLUMN CHALLENGE_REPLY.PH_NEWNAME IS '첨부파일새이름';
COMMENT ON COLUMN CHALLENGE_REPLY.PH_LOCATION IS '첨부파일위치';
COMMENT ON COLUMN CHALLENGE_REPLY.RP_LIKE IS '추천수';
COMMENT ON COLUMN CHALLENGE_REPLY.RP_STATUS IS '상태(Y/N)';


CREATE TABLE CHALLENGE_USER ( 
	CH_USER		VARCHAR2(20),
	CH_NO		NUMBER,
	RP_COUNT	NUMBER,
	ACHIEVEMENT	CHAR		DEFAULT 'P',
	FOREIGN KEY(CH_USER) REFERENCES MEMBER (USER_ID),
	FOREIGN KEY(CH_NO) REFERENCES CHALLENGE (CH_NO),
	CHECK (ACHIEVEMENT IN ('S', 'F', 'P')),
    PRIMARY KEY(CH_USER, CH_NO)
);

COMMENT ON COLUMN CHALLENGE_USER.CH_USER IS '참여유저';
COMMENT ON COLUMN CHALLENGE_USER.CH_NO IS '챌린지번호';
COMMENT ON COLUMN CHALLENGE_USER.RP_COUNT IS '댓글수';
COMMENT ON COLUMN CHALLENGE_USER.ACHIEVEMENT IS '성취도(S/F/P)';


CREATE TABLE CH_ATTACHMENT (
	AT_NO		NUMBER		PRIMARY KEY,
	AT_NEWNAME	VARCHAR2(255)	NOT NULL,
	AT_ORIGINNAME	VARCHAR2(255)	NOT NULL,
	AT_LOCATION	VARCHAR2(1000)	NOT NULL,
	CH_NO		NUMBER		NOT NULL,
	UNIQUE(AT_NEWNAME),
	FOREIGN KEY(CH_NO) REFERENCES CHALLENGE (CH_NO)
);

COMMENT ON COLUMN CH_ATTACHMENT.AT_NO IS '첨부파일번호';
COMMENT ON COLUMN CH_ATTACHMENT.AT_NEWNAME IS '첨부파일새이름';
COMMENT ON COLUMN CH_ATTACHMENT.AT_ORIGINNAME IS '첨부파일원본이름';
COMMENT ON COLUMN CH_ATTACHMENT.AT_LOCATION IS '첨부파일위치';
COMMENT ON COLUMN CH_ATTACHMENT.CH_NO IS '챌린지번호';


CREATE SEQUENCE SEQ_AP_NO
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;

CREATE SEQUENCE SEQ_CH_NO
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;

CREATE SEQUENCE SEQ_CHRP_NO
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;

CREATE SEQUENCE SEQ_CHAT_NO
	START WITH 1
	INCREMENT BY 1
	NOMAXVALUE;


--------------------------------------------------
--------------     FOLLOW 관련     ------------------	
--------------------------------------------------

CREATE TABLE FOLLOW(
 FOLLOW_NO NUMBER PRIMARY KEY,
 USER_ID  VARCHAR2(100)  NOT NULL, 
 FOLLOW_ID VARCHAR2(100)  NOT NULL,
 FOLLOW_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (FOLLOW_STATUS IN('Y', 'N')),
 FOREIGN KEY(USER_ID) REFERENCES MEMBER(USER_ID)
);

COMMENT ON COLUMN FOLLOW.FOLLOW_NO IS '팔로우번호';
COMMENT ON COLUMN FOLLOW.USER_ID IS '(유저)아이디';
COMMENT ON COLUMN FOLLOW.FOLLOW_ID IS '팔로잉 아이디';
COMMENT ON COLUMN FOLLOW.FOLLOW_STATUS IS '팔로우상태';

CREATE SEQUENCE SEQ_FLNO NOCACHE;

--------------------------------------------------
--------------     NOTICE 관련     ------------------	
--------------------------------------------------

CREATE TABLE NOTICE(
  NOTICE_NO NUMBER PRIMARY KEY,
  NOTICE_TITLE VARCHAR2(100) NOT NULL,
  NOTICE_CONTENT VARCHAR2(4000) NOT NULL,
  NOTICE_WRITER VARCHAR2(20) NOT NULL,
  COUNT NUMBER DEFAULT 0,
  CREATE_DATE DATE DEFAULT SYSDATE,
  NOTICE_STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (NOTICE_STATUS IN('Y', 'N')),
  FOREIGN KEY(NOTICE_WRITER) REFERENCES MEMBER(USER_ID)
);

COMMENT ON COLUMN NOTICE.NOTICE_NO IS '공지사항번호';
COMMENT ON COLUMN NOTICE.NOTICE_TITLE IS '공지사항제목';
COMMENT ON COLUMN NOTICE.NOTICE_CONTENT IS '공지사항내용';
COMMENT ON COLUMN NOTICE.NOTICE_WRITER IS '공지사항작성자';
COMMENT ON COLUMN NOTICE.COUNT IS '조회수';
COMMENT ON COLUMN NOTICE.CREATE_DATE IS '작성일';
COMMENT ON COLUMN NOTICE.NOTICE_STATUS  IS '공지사항 노출여부(Y/N)';

CREATE SEQUENCE SEQ_NONO NOCACHE;

INSERT INTO NOTICE
VALUES (SEQ_NONO.NEXTVAL, '두 라이크 게시판 이용 수칙입니다.', '두 라이크는 다양한 분야의 관심사를 통합한 커뮤니티입니다.<br>
다양한 사람들이 방문하는 커뮤니티인 만큼 서로 간의 예의를 지켜 주시길 당부드립니다.<br><br>
1. 타인에게 혐오감을 줄 주 있는 이미지 및 게시글은 제재될 수 있습니다. <br>
2. 게시판 목적에 맞지 않는 게시글은 유저의 신고로 삭제될 수 있으니 이 점 참고 바랍니다.<br>
3. 욕설 등 타인을 비방하는 행위 적발 시 게시판 이용이 정지될 수 있습니다.<br><br>
건전한 커뮤니티 형성을 위한 두 라이크 여러분들의 협조 부탁드립니다.', 'admin', DEFAULT, '2021-08-11', DEFAULT);




COMMIT;









